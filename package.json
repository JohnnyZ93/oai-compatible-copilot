{
	"name": "oai-compatible-copilot",
	"publisher": "johnny-zhao",
	"displayName": "OAI Compatible Provider for Copilot",
	"description": "An extension that integrates Openai Compatible Inference Providers into GitHub Copilot Chat",
	"icon": "assets/logo.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/JohnnyZ93/oai-compatible-copilot"
	},
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.104.0"
	},
	"categories": [
		"AI",
		"Chat"
	],
	"badges": [
		{
		"url": "https://img.shields.io/github/stars/JohnnyZ93/oai-compatible-copilot?style=social",
		"description": "Star oai-compatible-copilot on Github",
		"href": "https://github.com/JohnnyZ93/oai-compatible-copilot"
		}
	],
	"bugs": {
		"url": "https://github.com/JohnnyZ93/oai-compatible-copilot/issues"
	},
	"license": "MIT",
	"contributes": {
		"languageModelChatProviders": [
			{
				"vendor": "oaicopilot",
				"displayName": "OAI Compatible",
				"managementCommand": "oaicopilot.setApikey"
			}
		],
		"commands": [
			{
				"command": "oaicopilot.setApikey",
				"title": "Set OAI Compatible Apikey"
			}
		],
		"configuration": {
			"title": "OAI Compatible Copilot",
			"properties": {
				"oaicopilot.temperature": {
					"type": "number",
					"default": 0,
					"minimum": 0,
					"maximum": 2,
					"description": "Controls the randomness of the model's output. Lower values make output more deterministic, higher values make it more creative."
				},
				"oaicopilot.topP": {
					"type": "number",
					"default": 1,
					"minimum": 0,
					"maximum": 1,
					"description": "Controls diversity via nucleus sampling. Values between 0 and 1. 1 means no nucleus sampling."
				},
				"oaicopilot.maxTokens": {
					"type": "number",
					"default": 4096,
					"minimum": 1,
					"maximum": 10240000,
					"description": "Controls api limit maximum output tokens."
				},
				"oaicopilot.enableThinking": {
					"type": "boolean",
					"default": false,
					"description": "Enable model thinking process output."
				},
				"oaicopilot.baseUrl": {
					"type": "string",
					"default": "https://router.huggingface.co/v1",
					"description": "The base URL for the Openai Compatible Inference API. Default value is Hugging Face."
				},
				"oaicopilot.models": {
					"type": "array",
					"default": [],
					"items": {
						"type": "object",
						"properties": {
							"id": { "type": "string", "description": "Model ID" },
							"owned_by": { "type": "string", "default": "Unknown", "description": "Model Provider" },
							"context_length": { "type": "number", "default": 128000, "description": "Model Support Context Length" },
							"vision": { "type": "boolean", "default": false, "description": "if Model Support Vision or not" }
						},
						"required": ["id", "owned_by"]
					},
					"description": "A list of preferred models to use. If provided, these models will be used directly instead of fetching from the API. Model Value is id, owned_by, context_length and vision."
				}
			}
		}
	},
	"main": "./out/extension.js",
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"download-api": "dts dev",
		"compile": "tsc -p ./",
		"lint": "eslint",
		"format": "prettier --write .",
		"watch": "tsc -watch -p ./",
		"test": "pnpm run compile && vscode-test"
	},
	"dependencies": {},
	"devDependencies": {
		"@eslint/js": "^9.13.0",
		"@stylistic/eslint-plugin": "^2.9.0",
		"@types/node": "^22",
		"@types/mocha": "^10.0.6",
		"@vscode/dts": "^0.4.1",
		"@types/vscode": "^1.104.0",
		"@vscode/test-cli": "^0.0.11",
		"@vscode/test-electron": "^2.5.2",
		"eslint": "^9.13.0",
		"prettier": "^3.1.0",
		"typescript": "^5.9.2",
		"typescript-eslint": "^8.39.0"
	}
}
